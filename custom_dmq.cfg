route[REQINIT]{
   set_reply_no_connect();
    force_rport();
        if(src_ip!=myself) {
        if($sht(ipban=>$si)!=$null) {
            xdbg("request from blocked IP - $rm from $fu (IP:$si:$sp)\n");
            exit;
        }
        if (!pike_check_req()) {
            xlog("L_ALERT","ALERT: pike blocking $rm from $fu (IP:$si:$sp)\n");
            $sht(ipban=>$si) = 1;
            exit;
        }
    }
    if(is_method("OPTIONS") && is_myself("$ru")) ||  $ua =~ "sipsak" {
            sl_send_reply("200","ok");



    if (!mf_process_maxfwd_header("10")) {
        sl_send_reply("483","Too Many Hops");
        exit;
    }

    if(!sanity_check("17895", "7")) {
        xlog("Malformed SIP request from $si:$sp\n");
        exit;
    }
}   
}


    route[AUTH]{
    if(!is_method("REGISTER|PUBLISH"))return;
    if(!auth_check("$fd", "subscriber", "1")){
        auth_challenge("$fd", "0");
        dmq_t_replicate();
        exit;
        }
        consume_credentials();      
}


route[REGISTRAR]{
    if(!is_method("REGISTER"))return;
    if(!save("location")){
    sl_reply_error();
    }
    exit;
}


route[NATMANAGE]{
    force_rport();
    xlog("L_INFO", "received avp before: $avp(RECEIVED)\n");
    fix_nated_register();
    xlog("L_INFO", "received after fix_nated_register: $avp(RECEIVED)\n");
    set_contact_alias();
}


route[LOCATION]{
    if(!lookup("location")){
        //send_reply("404", "Not Found");
        return(-1);
        }
    setflag(TO_CLIENT);
    return(1);
}

route[RELAY]{
    if(!t_is_set("branch_route"))t_on_branch("MANAGE_BRANCH");
    if(!t_relay()){
        sl_reply_error();
    }
    exit;
}

route[ROUTING]{
    if(is_method("INVITE")&&!has_totag()){
        remove_hf("Route");
        record_route();
    if(loose_route()){
        if(is_method("BYE")){
            setflag(FLT_ACCFAILED);
            t_relay();
            return; 
       }     
    }
}
}

route[WITHINDLG]{
    if(!has_totag())return(-1);
    if(loose_route())return(1);
    if(is_method("ACK")){
        if(t_check_trans()){
            return(1);
            }else{
                exit;
            }
    }
    sl_send_reply("404","Not here");
    
    exit;
}

route[CANCEL]{
    if(is_method("CANCEL")){

        if(!t_check_trans()){
            exit;
        }
    }
}

route[SDPMANAGE]{
    if($rb==$null||$rb==""){
        return;
    }
    if(is_request() && is_method("BYE"))||(is_reply()&&$rs>299){
        rtpengine_manage();
        return;
    }
    rtpengine_manage("replace-origin replace-session-connection SIP-source-addres $avp(direction)");
}


route[TO_PSTN]{
    $fU= "79268530630";
    $ru= "sip:"+$rU+"@10.75.0.23:5060";
    $fs = "udp:192.168.194.132:5060";
    $du="sip:10.75.0.23:5060;r2=on;lr";   
      $fs = "udp:192.168.194.132:5060";
    $du="sip:10.75.0.23:5060;r2=on;lr";
        if ( search_hf("$ua", "Asterisk) ){
            replace("Asterisk", "SuperServer");
        }
    }


route[SECURUTY]{
if($ua =~ "friendly-scanner|sipcli|VaxSIPUserAgent|pplsip" || search("sipvicious")) {
        xwarn("REQINIT: Dropping scanner request ----> $rm from $si\n");
        send_reply("404", "Fuck you");
        exit;
    }
}

route[FIXCONTACT]{
    if $hdr(Contact) == 0{
        if(is_method("ACK")){
            append_hf("Contact: <sip:$fU@$si:$sp>\r\n", "Call-id");
        }
        return;
        if isflagset(TO_CLIENT){
            fix_nated_contact();
            return;
        }
    }
}



route[KDMQ]{
   if(is_method("KDMQ")&&$Rp==5090){
        dmq_handle_message();
    }
}


route[CS]{
    if(ds_is_from_list(DISPATCHERS_NODES)){
        if is_method("OPTIONS"){
            sl_reply_error("200","ok");
            exit;
        }
        setsflag(FLAG_INTERNALLY_SOURCED);
        $avp(direction)="direction=private direction=public";
    }
}

route[DS]{

}